/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wordbook;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author jeff_jeong
 */
public class FindingForm extends javax.swing.JDialog {

    /**
     * Creates new form FindingForm
     */
    UpdatingForm updatingForm;
    int[] indexes;
    int[] count;
    
    public FindingForm(java.awt.Frame parent, boolean modal, UpdatingForm updatingForm) {
        super(parent, modal);
        initComponents();
        this.updatingForm = updatingForm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CONDITION = new javax.swing.JLabel();
        STATIC_WORD = new javax.swing.JLabel();
        WORD = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        VOCABULARIES = new javax.swing.JTable();
        FIND = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        CONDITION.setText("조  건");

        STATIC_WORD.setText("단    어 : ");

        VOCABULARIES.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "번호", "단어", "품사", "의미", "예문"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        VOCABULARIES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VOCABULARIESMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(VOCABULARIES);
        if (VOCABULARIES.getColumnModel().getColumnCount() > 0) {
            VOCABULARIES.getColumnModel().getColumn(0).setMinWidth(30);
            VOCABULARIES.getColumnModel().getColumn(0).setMaxWidth(30);
            VOCABULARIES.getColumnModel().getColumn(1).setMinWidth(80);
            VOCABULARIES.getColumnModel().getColumn(1).setMaxWidth(80);
            VOCABULARIES.getColumnModel().getColumn(2).setMinWidth(80);
            VOCABULARIES.getColumnModel().getColumn(2).setMaxWidth(80);
            VOCABULARIES.getColumnModel().getColumn(3).setMinWidth(80);
            VOCABULARIES.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        FIND.setText("찾    기");
        FIND.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FINDMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CONDITION)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(STATIC_WORD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WORD, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FIND)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(CONDITION)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(STATIC_WORD)
                    .addComponent(WORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FIND))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // 2. 찾기버튼을 클릭했을때
    private void FINDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FINDMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)this.VOCABULARIES.getModel();
        //2.1  단어를 읽는다.
        String word = this.WORD.getText();
        
        //2.2 단어장에서 찾는다.
        this.indexes = new int [updatingForm.wordBook.GetLength()];
        this.count = new int [1];
        updatingForm.wordBook.Find(word, indexes, count);
        
        //2.4 리스트뷰의 항목들을 모두 지운다.
        int length = model.getRowCount();
        System.out.println(length);
        if(length > 0)
        {
            int i = length - 1;
            while(i >= 0)
            {
                model.removeRow(i);
                i--;
            }
        }
        
        //2.5 리스트뷰에 항목들을 추가한다.
        int index = 0;
        while(index < count[0])
        {
            Vocabulary vocabulary = updatingForm.wordBook.GetAt(indexes[index]);
            Object row[] = {index + 1, vocabulary.GetWord(), vocabulary.GetPartOfSpeech(), vocabulary.GetMeaning(), vocabulary.GetExample()};
            model.addRow(row);
            index++;
        }
    }//GEN-LAST:event_FINDMouseClicked

    //3. 리스트뷰에 항목을 더블클릭 했을때
    private void VOCABULARIESMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VOCABULARIESMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2)
        {
            //3.1 리스트 뷰에 선택된 위치를 읽는다.
            int lvIndex = this.VOCABULARIES.getSelectedRow();
            
            //3.2 리스트 뷰의 선택된 항목을 읽는다.
            String word = (String)this.VOCABULARIES.getValueAt(lvIndex, 1);
            String partOfSpeech = (String)this.VOCABULARIES.getValueAt(lvIndex, 2);
            String meaning = (String)this.VOCABULARIES.getValueAt(lvIndex, 3);
            String example = (String)this.VOCABULARIES.getValueAt(lvIndex, 4);
            
            //3.3 단어장 윈도우의 단어장에 적는다.
            updatingForm.WORD.setText(word);
            updatingForm.COMBO_PARTOFSPEECH.setSelectedItem(partOfSpeech);
            updatingForm.MEANING.setText(meaning);
            updatingForm.EXAMPLE.setText(example);
            
            //3.4 단어장 윈도우의 리스트뷰에 해당 개인을 마크한다.
            updatingForm.VOCABULARIES.setRowSelectionInterval(this.indexes[lvIndex], this.indexes[lvIndex]);
            
            //3.5 윈도우를 닫는다.
            this.setVisible(false);
        }
    }//GEN-LAST:event_VOCABULARIESMouseClicked

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CONDITION;
    private javax.swing.JButton FIND;
    private javax.swing.JLabel STATIC_WORD;
    private javax.swing.JTable VOCABULARIES;
    private javax.swing.JTextField WORD;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
